{
  "name": "GAUnmatchedMatchingScript",
  "rule": "def params = [:]\ndef rows = []\n\nif(row['First Name'] && row['Last Name'] && row['Street Address'] && row['City'] && row['Postal Code']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name','Street Address','City','Postal Code']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName) AND \n\t\tResCityName LIKE :City AND \n\t\tResZip LIKE :PostalCode AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\tResCityName LIKE :City AND \n\t\tResZip LIKE :PostalCode AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n} else if(row['First Name'] && row['Last Name'] && row['Street Address'] && row['City']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name','Street Address','City']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName) AND \n\t\tResCityName LIKE :City AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\tResCityName LIKE :City AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n} else if(row['First Name'] && row['Last Name'] && row['Street Address'] && row['Postal Code']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name','Street Address','Postal Code']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName) AND \n\t\tResZip LIKE :PostalCode AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\tResZip LIKE :PostalCode AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n} else if(row['First Name'] && row['Last Name'] && row['City'] && row['Postal Code']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name','City','Postal Code']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName) AND \n\t\tResCityName LIKE :City AND \n\t\tResZip LIKE :PostalCode\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\tResCityName LIKE :City AND \n\t\tResZip LIKE :PostalCode\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n} else if(row['First Name'] && row['Last Name'] && row['City']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name','City']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName) AND \n\t\tResCityName LIKE :City\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\tResCityName LIKE :City\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n} else if(row['First Name'] && row['Last Name'] && row['Postal Code']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name','Postal Code']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName) AND \n\t\tResZip LIKE :PostalCode\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\tResZip LIKE :PostalCode\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n} else if(row['First Name'] && row['Last Name'] && row['Street Address']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name','Street Address']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName) AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t:StreetAddress LIKE CONCAT(ResHouseNbr,'%')\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n} else if(row['First Name'] && row['Last Name']) {\n\tparams = row.inject([:]) { r,k,v ->\n\t\tif(k in ['First Name','Last Name']) {\n\t\t\tr[k.replaceAll(/\\s/,'')] = v\n\t\t}\n\t\treturn r\n\t}\n\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\tWHERE VoterLastName LIKE :LastName AND \n\t\t(VoterFirstName LIKE :FirstName OR VoterMiddleMaiden LIKE :FirstName)\"\"\",params)\n\tif(!rows) {\n\t\trows = sql.rows(\"\"\"SELECT * FROM Voters \n\t\t\tWHERE VoterLastName LIKE :LastName\"\"\",params.inject([:]) { r,k,v -> \n\t\t\t\tif(!(k in ['FirstName'])) {\n\t\t\t\t\tr[k] = v\n\t\t\t\t}\n\t\t\t\treturn r\n\t\t\t}\n\t\t)\n\t}\n}\nif(rows) {\n\tif(rows.collect { o -> return o.RegistrationNbr }.unique().size() == 1) {\n\t\tsql.executeUpdate(\"UPDATE `Unmatched` SET RegistrationNbr = :voterId WHERE `id` = :id\",[id: row['id'],voterId: rows.first().RegistrationNbr])\n\t}\n}",
  "class": "edu.usf.RuleChains.Groovy"
}