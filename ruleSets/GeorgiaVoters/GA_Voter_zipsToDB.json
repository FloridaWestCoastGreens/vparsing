{
  "rule": "def tempfiles = []\ndef filecount = 0\ndef maxlines = 25000\ndef ln = System.getProperty('line.separator')\ndef tmpDir = System.getProperty(\"java.io.tmpdir\")\n\ndef importFolder = new File(\"${tmpDir}/Voters/Georgia\")\nif(!importFolder.exists()) {\n\timportFolder.mkdirs()\n} \nsql.withBatch(20, \"\"\"\nREPLACE INTO `Voters`\n(\n`CountyCode`,\n`RegistrationNbr`,\n`VoterStatus`,\n`VoterLastName`,\n`VoterFirstName`,\n`VoterMiddleMaiden`,\n`VoterNameSuffix`,\n`VoterNameTitle`,\n`ResHouseNbr`,\n`ResStreetName`,\n`ResStreetSuffix`,\n`ResAptUnitNbr`,\n`ResCityName`,\n`ResZip`,\n`ResZipPlus4`,\n`MidrFlag`,\n`PollWorker`,\n`TransactionCode`,\n`TransactionYearMonth`,\n`Filler1`,\n`DateOfBirth`,\n`RegistrationDate`,\n`Race`,\n`Gender`,\n`Absentee`,\n`LandDistrict`,\n`LandLot`,\n`OriginalRegDate`,\n`StatusReason`,\n`Filler2`,\n`CountyPrecinctId`,\n`CityPrecinctId`,\n`CongressionalDistrict`,\n`SenateDistrict`,\n`HouseDistrict`,\n`JudicialDistrict`,\n`CommDistrict`,\n`SchoolDistrict`,\n`CountyDistAName`,\n`CountyDistAValue`,\n`CountyDistBName`,\n`CountyDistBValue`,\n`MunicipalName`,\n`MunicipalCode`,\n`WardCityCouncilName`,\n`WardCityCouncil`,\n`CitySchoolDistName`,\n`CitySchoolDist`,\n`CityDistAName`,\n`CityDistAValue`,\n`CityDistBName`,\n`CityDistBValue`,\n`CityDistCName`,\n`CityDistCValue`,\n`CityDistDName`,\n`CityDistDValue`,\n`DateLastVotedDate`,\n`TypeOfElection`,\n`PartyLastVoted`,\n`LastContactDate`,\n`MailHouseNbr`,\n`MailStreetName`,\n`MailStreetSuffix`,\n`MailAptUnitNbr`,\n`MailCity`,\n`MailState`,\n`MailZip`,\n`MailZipPlus4`,\n`Filler3`,\n`MailAddress2`,\n`MailAddress3`,\n`MailCounty`,\n`DateAdded`,\n`DateChanged`,\n`DistrictCombo`,\n`ResBuilding`,\n`MailRRPOBox`,\n`CombinedStreetAddr`,\n`ExportDate`\n) \nVALUES \n(\nTRIM(SUBSTR(:line,1,3)),\nTRIM(SUBSTR(:line,4,8)),\nTRIM(SUBSTR(:line,12,1)),\nTRIM(SUBSTR(:line,13,20)),\nTRIM(SUBSTR(:line,33,20)),\nTRIM(SUBSTR(:line,53,20)),\nTRIM(SUBSTR(:line,73,3)),\nTRIM(SUBSTR(:line,76,3)),\nTRIM(SUBSTR(:line,79,6)),\nTRIM(SUBSTR(:line,85,30)),\nTRIM(SUBSTR(:line,115,2)),\nTRIM(SUBSTR(:line,117,8)),\nTRIM(SUBSTR(:line,125,17)),\nTRIM(SUBSTR(:line,142,5)),\nTRIM(SUBSTR(:line,147,4)),\nTRIM(SUBSTR(:line,151,1)),\nTRIM(SUBSTR(:line,152,1)),\nTRIM(SUBSTR(:line,153,1)),\nTRIM(SUBSTR(:line,154,6)),\nTRIM(SUBSTR(:line,160,2)),\nSTR_TO_DATE(SUBSTR(:line,162,8),'%Y%m%d'),\nSTR_TO_DATE(SUBSTR(:line,170,8),'%Y%m%d'),\nTRIM(SUBSTR(:line,178,1)),\nTRIM(SUBSTR(:line,179,1)),\nTRIM(SUBSTR(:line,180,1)),\nTRIM(SUBSTR(:line,181,3)),\nTRIM(SUBSTR(:line,184,4)),\nSTR_TO_DATE(SUBSTR(:line,188,8),'%Y%m%d'),\nTRIM(SUBSTR(:line,196,9)),\nTRIM(SUBSTR(:line,205,5)),\nTRIM(SUBSTR(:line,210,5)),\nTRIM(SUBSTR(:line,215,5)),\nTRIM(SUBSTR(:line,220,3)),\nTRIM(SUBSTR(:line,223,3)),\nTRIM(SUBSTR(:line,226,3)),\nTRIM(SUBSTR(:line,229,3)),\nTRIM(SUBSTR(:line,232,3)),\nTRIM(SUBSTR(:line,235,3)),\nTRIM(SUBSTR(:line,238,13)),\nTRIM(SUBSTR(:line,251,3)),\nTRIM(SUBSTR(:line,254,13)),\nTRIM(SUBSTR(:line,267,3)),\nTRIM(SUBSTR(:line,270,17)),\nTRIM(SUBSTR(:line,287,3)),\nTRIM(SUBSTR(:line,290,13)),\nTRIM(SUBSTR(:line,303,3)),\nTRIM(SUBSTR(:line,306,13)),\nTRIM(SUBSTR(:line,319,3)),\nTRIM(SUBSTR(:line,322,13)),\nTRIM(SUBSTR(:line,335,3)),\nTRIM(SUBSTR(:line,338,13)),\nTRIM(SUBSTR(:line,351,3)),\nTRIM(SUBSTR(:line,354,13)),\nTRIM(SUBSTR(:line,367,3)),\nTRIM(SUBSTR(:line,370,13)),\nTRIM(SUBSTR(:line,383,3)),\nSTR_TO_DATE(SUBSTR(:line,386,8),'%Y%m%d'),\nTRIM(SUBSTR(:line,394,3)),\nTRIM(SUBSTR(:line,397,1)),\nSTR_TO_DATE(SUBSTR(:line,398,8),'%Y%m%d'),\nTRIM(SUBSTR(:line,406,6)),\nTRIM(SUBSTR(:line,412,30)),\nTRIM(SUBSTR(:line,442,2)),\nTRIM(SUBSTR(:line,444,8)),\nTRIM(SUBSTR(:line,452,17)),\nTRIM(SUBSTR(:line,469,2)),\nTRIM(SUBSTR(:line,471,5)),\nTRIM(SUBSTR(:line,476,4)),\nTRIM(SUBSTR(:line,480,2)),\nTRIM(SUBSTR(:line,482,30)),\nTRIM(SUBSTR(:line,512,30)),\nTRIM(SUBSTR(:line,542,20)),\nSTR_TO_DATE(SUBSTR(:line,562,8),'%Y%m%d'),\nSTR_TO_DATE(SUBSTR(:line,570,8),'%Y%m%d'),\nTRIM(SUBSTR(:line,578,3)),\nTRIM(SUBSTR(:line,581,3)),\nTRIM(SUBSTR(:line,584,8)),\nTRIM(SUBSTR(:line,592,60)),\nSTR_TO_DATE(:snapshotDate,'%Y%m%d')\n)\n\"\"\") { ps ->                 \n\timportFolder.eachDirRecurse() { dir ->\n\t\tdir.eachFileMatch(~/.*Fixed.zip/) { file -> \n\t\t\tdef zipFile = new java.util.zip.ZipFile(file)\t\t\t\n\t\t\tdef voterEntry = zipFile.entries().max{ it.getSize() }\n\t\t\tdef modificationTime = (new Date(voterEntry.getTime())).format(\"yyyyMMdd\")\n\t\t\tprintln \"${modificationTime} Mod Time\"\n\t\t\tprintln \"Entry is ${voterEntry.name}\"\n\t\t\t(new BufferedReader(new InputStreamReader(zipFile.getInputStream(voterEntry), \"UTF-8\"))).eachLine { line ->\n\t\t\t\tps.addBatch([line: line, snapshotDate: modificationTime])\n\t\t\t}\n\t\t\t\n\t\t}\n\t}\t\n}",
  "class": "edu.usf.RuleChains.Groovy"
}