{
  "name": "GA_Voter_zipToTextFragmentsOld",
  "rule": "def settings = [\n\timportFolder: '/usr/share/tomcat/Voters/Georgia',\n\timportFolderMac: '/Applications/NetBeans/apache-tomcat-7.0.41/Voters/Georgia',\n\tzipName: \"Georgia_Voters_Fixed.zip\",\n\tcompressedFile: 'DailyVoterBase_Fixed.txt'\n]\ndef zipFile = new java.util.zip.ZipFile(new File(settings.importFolder,settings.zipName))\n\n// def voterEntry = zipFile.entries().findAll { !it.directory }.find { it.name == settings.compressedFile }\ndef voterEntry = zipFile.entries().findAll { !it.directory }.max { it.getSize() }\ndef modificationTime = (new Date(voterEntry.getTime())).format(\"yyyyMMdd\")\nprintln \"${modificationTime} Mod Time\"\nprintln \"Entry is ${voterEntry.name}\"\n\ndef count = 0\ndef filecount = 0\ndef ln = System.getProperty('line.separator')\ndef unparsedTextFile\ndef tempfiles = []\n(new BufferedReader(new InputStreamReader(zipFile.getInputStream(voterEntry), \"UTF-8\"))).eachLine { line ->\n\tif(count < 1) {\n\t\t// Create new tempfile\n\t\tunparsedTextFile = File.createTempFile('temp', '.txt')\n\t\tfilecount++\n\t\ttempfiles << [\n\t\t\timportFile: unparsedTextFile.canonicalPath,\n\t\t\tsnapshotDate: modificationTime,\n\t\t\tfilecount: filecount\n\t\t]\n\t\tprintln \"Temp file path: ${unparsedTextFile.canonicalPath}\"\n\t}\n\tunparsedTextFile << \"$line$ln\"\n\tcount++\n\tif(count > 50000) {\n\t\tcount = 0\n\t}\n}\n\nreturn tempfiles.collect { tf ->\n\ttf.total = filecount\n\treturn tf\n}",
  "class": "edu.usf.RuleChains.Groovy"
}