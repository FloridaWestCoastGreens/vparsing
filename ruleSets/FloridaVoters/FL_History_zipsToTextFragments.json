{
  "name": "FL_History_zipsToTextFragments",
  "rule": "def tempfiles = []\ndef filecount = 0\ndef ln = System.getProperty('line.separator')\nnew File(row.importFolder).eachDirRecurse() { dir ->\n\tdir.eachFileMatch(~/.*History.zip/) { file -> \n\t\tdef zipFile = new java.util.zip.ZipFile(file)\n\t\tzipFile.entries().each { voterEntry ->\n\t\t\tdef modificationTime = (new Date(voterEntry.getTime())).format(\"yyyyMMdd\")\n\t\t\tprintln \"${modificationTime} Mod Time\"\n\t\t\tprintln \"Entry is ${voterEntry.name}\"\n\t\t\t\n\t\t\tdef count = 0\n\t\t\tdef unparsedTextFile\n\t\t\t(new BufferedReader(new InputStreamReader(zipFile.getInputStream(voterEntry), \"UTF-8\"))).eachLine { line ->\n\t\t\t\tif(count < 1) {\n\t\t\t\t\t// Create new tempfile\n\t\t\t\t\tunparsedTextFile = File.createTempFile('temp', '.txt')\n\t\t\t\t\tfilecount++\n\t\t\t\t\ttempfiles << [\n\t\t\t\t\t\timportFile: unparsedTextFile.canonicalPath,\n\t\t\t\t\t\tsnapshotDate: modificationTime,\n\t\t\t\t\t\tfilecount: filecount\n\t\t\t\t\t]\n\t\t\t\t\tprintln \"Temp file path: ${unparsedTextFile.canonicalPath}\"\n\t\t\t\t}\n\t\t\t\tunparsedTextFile << \"$line$ln\"\n\t\t\t\tcount++\n\t\t\t\tif(count > 50000) {\n\t\t\t\t\tcount = 0\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\t\n\t\nreturn tempfiles.collect { tf ->\n\ttf.total = filecount\n\treturn tf\n}",
  "class": "edu.usf.RuleChains.Groovy"
}